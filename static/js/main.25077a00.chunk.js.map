{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["fromDateToString","date","toUTCString","slice","Clock","state","Date","timerId","this","window","setInterval","setState","prevProps","prevState","name","props","console","debug","info","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","handleShowClock","handleHideClock","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,EAAiBC,GACxB,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAGjC,IAAMC,EAAb,4MACEC,MAAe,CACbJ,KAAM,IAAIK,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEV,KAAM,IAAIK,SACzB,OAVP,gCAaE,SAAmBM,EAA4BC,GACzCD,EAAUE,OAASN,KAAKO,MAAMD,MAEhCE,QAAQC,MAAR,uBAA8BL,EAAUE,KAAxC,eAAmDN,KAAKO,MAAMD,OAG5DD,EAAUZ,OAASO,KAAKH,MAAMJ,MAEhCe,QAAQE,KAAKlB,EAAiBQ,KAAKH,MAAMJ,SArB/C,kCAyBE,WACEQ,OAAOU,cAAcX,KAAKD,WA1B9B,oBA6BE,WACE,IAAQN,EAASO,KAAKH,MAAdJ,KACAa,EAASN,KAAKO,MAAdD,KAER,OACE,sBAAKM,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGN,IAGF,YAED,sBAAMM,UAAU,cAAhB,SACGpB,EAAiBC,YA1C5B,GAA2BoB,IAAMC,WCLjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWvB,OAAO,GAE3C,MAAM,SAAN,OAAgBqB,GAGX,IAAMG,EAAb,4MACEtB,MAAyB,CACvBuB,UAAU,EACVC,UAAW,WAHf,EAMEtB,QAAU,EANZ,EAuBEuB,gBAAkB,WAChB,EAAKnB,SAAS,CAAEiB,UAAU,KAxB9B,EA2BEG,gBAAkB,SAACC,GACjBA,EAAMC,iBAEN,EAAKtB,SAAS,CAAEiB,UAAU,KA9B9B,uDAQE,WAA2B,IAAD,OACxBM,SAASC,iBAAiB,cAAe3B,KAAKuB,iBAC9CG,SAASC,iBAAiB,QAAS3B,KAAKsB,iBAExCtB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEkB,UAAWN,QAC1B,QAdP,kCAiBE,WACEW,SAASE,oBAAoB,cAAe5B,KAAKuB,iBACjDG,SAASE,oBAAoB,QAAS5B,KAAKsB,iBAC3CrB,OAAOU,cAAcX,KAAKD,WApB9B,oBAiCE,WACE,IAAQsB,EAAcrB,KAAKH,MAAnBwB,UAER,OACE,sBAAKT,UAAU,MAAf,UACE,6CAEEZ,KAAKH,MAAMuB,UACX,cAAC,EAAD,CAAOd,KAAMe,WAzCvB,GAAyBP,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.25077a00.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: string;\n}\n\ninterface State {\n  date: Date;\n}\n\nfunction fromDateToString(date: Date): string {\n  return date.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<State>) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n\n    if (prevState.date !== this.state.date) {\n      // eslint-disable-next-line no-console\n      console.info(fromDateToString(this.state.date));\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {fromDateToString(date)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleHideClock);\n    document.addEventListener('click', this.handleShowClock);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.handleHideClock);\n    document.removeEventListener('click', this.handleShowClock);\n    window.clearInterval(this.timerId);\n  }\n\n  handleShowClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleHideClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render(): React.ReactNode {\n    const { clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        { this.state.hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}